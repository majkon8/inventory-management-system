volumes:
    mongodb_write.data:
    mongodb_write.config:
    mongodb_read.data:
    mongodb_read.config:
    redis_cache.data:
    rabbitmq.data:

services:
    redis_cache:
        image: ${COMPOSE_PROJECT_NAME}/redis_cache
        container_name: ${COMPOSE_PROJECT_NAME}.redis_cache.docker
        restart: unless-stopped
        build:
            context: .
            dockerfile: ./redis.Dockerfile
        env_file: envs/redis_cache.env
        volumes:
            - redis_cache.data:/data
        ports:
            - 127.0.0.1:${REDIS_CACHE_PORT}:${REDIS_CACHE_PORT}
        networks:
            - network

    mongodb_write:
        image: ${COMPOSE_PROJECT_NAME}/mongodb_write
        container_name: ${COMPOSE_PROJECT_NAME}.mongodb_write.docker
        restart: unless-stopped
        build:
            context: .
            dockerfile: ./mongo.Dockerfile
        env_file: envs/mongo_write.env
        volumes:
            - mongodb_write.data:/data/db
            - mongodb_write.config:/data/configdb
        ports:
            - 127.0.0.1:${MONGO_WRITE_PORT}:27017
        networks:
            - network

    mongodb_read:
        image: ${COMPOSE_PROJECT_NAME}/mongodb_read
        container_name: ${COMPOSE_PROJECT_NAME}.mongodb_read.docker
        restart: unless-stopped
        build:
            context: .
            dockerfile: ./mongo.Dockerfile
        env_file: envs/mongo_read.env
        volumes:
            - mongodb_read.data:/data/db
            - mongodb_read.config:/data/configdb
        ports:
            - 127.0.0.1:${MONGO_READ_PORT}:27017
        networks:
            - network

    rabbitmq:
        image: ${COMPOSE_PROJECT_NAME}/rabbitmq
        container_name: ${COMPOSE_PROJECT_NAME}.rabbitmq.docker
        hostname: rabbitmq
        restart: unless-stopped
        build:
            context: .
            dockerfile: ./rabbitmq.Dockerfile
            args:
                RABBITMQ_MANAGEMENT_PORT: ${RABBITMQ_MANAGEMENT_PORT}
                VM_MEMORY_HIGH_WATERMARK_ABSOLUTE: ${RABBITMQ_VM_MEMORY_HIGH_WATERMARK_ABSOLUTE}
                DISK_FREE_LIMIT_ABSOLUTE: ${RABBITMQ_DISK_FREE_LIMIT_ABSOLUTE}
        env_file: envs/rabbitmq.env
        volumes:
            - rabbitmq.data:/var/lib/rabbitmq
        ports:
            - 127.0.0.1:${RABBITMQ_PORT}:${RABBITMQ_PORT}
            - 127.0.0.1:${RABBITMQ_MANAGEMENT_PORT}:${RABBITMQ_MANAGEMENT_PORT}
        networks:
            - network

networks:
    network:
        driver: bridge
